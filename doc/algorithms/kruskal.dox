/*!

Алгоритм Крускала с системой непересекающихся множеств. Сложность: O(M log N), где M - число рёбер, N - число вершин.
Дан взвешенный неориентированный граф. Требуется найти такое поддерево этого графа,
которое бы соединяло все его вершины, и при этом обладало наименьшим весом (т.е. суммой весов рёбер) из всех возможных.
Такое поддерево называется минимальным остовным деревом или простом минимальным остовом.

std::vector<std::pair<int,int>> Kruskal(const graph::WeightedGraph<Weight>& graph);

Пример использования:

WeightedGraph<int> g;
g.AddVertex(1);
g.AddVertex(2);
g.AddVertex(3);
g.AddVertex(4);
g.AddEdge(1,2,4);
g.AddEdge(2,3,1);
g.AddEdge(3,1,3);
g.AddEdge(3,4,2);

std::vector<std::pair<int,int>> result = Kruskal(g);
    
Результат:

{1, 3} //{вершина1, вершина2}
{2, 3}
{3, 4}

*/
